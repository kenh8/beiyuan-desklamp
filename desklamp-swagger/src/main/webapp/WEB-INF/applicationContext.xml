<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.hiveview.tv.swagger.controller" />

    <context:component-scan base-package="com.hiveview.tv.swagger">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 添加注解驱动 -->
    <mvc:annotation-driven />
    <!-- 允许对静态资源文件的访问 -->

    <mvc:default-servlet-handler />
    <bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="apiConfig" class="com.hiveview.tv.swagger.config.SwaggerConfiguration"></bean>
    <!--配置全局配置类Global 读取属性文件-->
    <!--<bean id="propertiesResourcePaths" class="com.hiveview.core.util.PropertiesResourcePaths">
        <property name="resourcesPaths">
            <list>
                <value>application.properties</value>
                &lt;!&ndash;<value>file:/data/domyshop/tv/application.properties</value>&ndash;&gt;
            </list>
        </property>
    </bean>-->

    <!--配置全局配置类Global 读取属性文件-->
    <bean id="propertiesResourcePaths" class="com.hiveview.base.common.properties.PropertiesResourcePaths">
        <property name="resourcesPaths">
            <list>
                <value>application.properties</value>
            </list>
        </property>
    </bean>
    <context:property-placeholder properties-ref="customProperties" />

    <bean id="customProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean" p:ignoreResourceNotFound="true" p:localOverride="true">
        <property name="locations">
            <list>
                <!-- 标准配置-->
                <value>classpath*:/application.properties</value>
                <!--服务器生产环境配置-->
                <!--<value>file:/data/domyshop/tv/application.properties</value>-->
            </list>
        </property>
    </bean>

    <!--<mvc:interceptors>
    <mvc:interceptor>
        <mvc:mapping path="/**" />
        <bean class="com.hiveview.tv.swagger.util.interceptor.VersionInterceptor"></bean>
    </mvc:interceptor>
    </mvc:interceptors>-->
</beans>